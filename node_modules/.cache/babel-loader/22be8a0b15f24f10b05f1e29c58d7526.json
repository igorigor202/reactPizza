{"ast":null,"code":"import { calcTotalPrice } from './../../utils/calcTotalPrice';\nimport { getCartFromLS } from './../../utils/getCartFromLS';\nimport { createSlice } from '@reduxjs/toolkit';\nconst cartData = getCartFromLS();\nconst initialState = {\n  totalPrice,\n  items\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({ ...action.payload,\n          count: 1\n        });\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n      }\n\n      state.totalPrice = state.items.reduce((sum, item) => sum + item.price * item.count, 0);\n    },\n\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalPrice = state.items.reduce((sum, item) => sum + item.price * item.count, 0);\n    },\n\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n\n  }\n});\nexport const selectCartItemById = id => state => state.cart.items.find(item => item.id === id);\nexport const selectCart = state => state.cart;\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["calcTotalPrice","getCartFromLS","createSlice","cartData","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","item","id","payload","count","push","minusItem","reduce","sum","price","removeItem","filter","obj","clearItems","selectCartItemById","cart","selectCart","actions","reducer"],"sources":["C:/Users/Igor N/Desktop/react pizza 24 L/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { calcTotalPrice } from './../../utils/calcTotalPrice';\nimport { getCartFromLS } from './../../utils/getCartFromLS';\nimport { RootState } from './../store';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type CartItem = {\n  id: string;\n  title: string;\n  price: number;\n  imageUrl: string;\n  size: number;\n  type: string;\n  count: number;\n};\n\ninterface CartSliceState {\n  totalPrice: number;\n  items: CartItem[];\n}\n\nconst cartData = getCartFromLS();\n\nconst initialState: CartSliceState = {\n  totalPrice,\n  items,\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action: PayloadAction<CartItem>) {\n      const findItem = state.items.find((item) => item.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action: PayloadAction<string>) {\n      const findItem = state.items.find((item) => item.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n      state.totalPrice = state.items.reduce((sum, item) => sum + item.price * item.count, 0);\n    },\n    removeItem(state, action: PayloadAction<string>) {\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n      state.totalPrice = state.items.reduce((sum, item) => sum + item.price * item.count, 0);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const selectCartItemById = (id: string) => (state: RootState) =>\n  state.cart.items.find((item) => item.id === id);\nexport const selectCart = (state: RootState) => state.cart;\n\nexport const { addItem, removeItem, clearItems, minusItem } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,8BAA/B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,SAASC,WAAT,QAA2C,kBAA3C;AAiBA,MAAMC,QAAQ,GAAGF,aAAa,EAA9B;AAEA,MAAMG,YAA4B,GAAG;EACnCC,UADmC;EAEnCC;AAFmC,CAArC;AAKA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MADsB;EAE5BJ,YAF4B;EAG5BK,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAyC;MAC9C,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAAtD,CAAjB;;MAEA,IAAIH,QAAJ,EAAc;QACZA,QAAQ,CAACK,KAAT;MACD,CAFD,MAEO;QACLP,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB,EACf,GAAGP,MAAM,CAACK,OADK;UAEfC,KAAK,EAAE;QAFQ,CAAjB;MAID;;MACDP,KAAK,CAACN,UAAN,GAAmBL,cAAc,CAACW,KAAK,CAACL,KAAP,CAAjC;IACD,CAbO;;IAcRc,SAAS,CAACT,KAAD,EAAQC,MAAR,EAAuC;MAC9C,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAA9C,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACZA,QAAQ,CAACK,KAAT;MACD;;MACDP,KAAK,CAACN,UAAN,GAAmBM,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAmB,CAACC,GAAD,EAAMP,IAAN,KAAeO,GAAG,GAAGP,IAAI,CAACQ,KAAL,GAAaR,IAAI,CAACG,KAA1D,EAAiE,CAAjE,CAAnB;IACD,CApBO;;IAqBRM,UAAU,CAACb,KAAD,EAAQC,MAAR,EAAuC;MAC/CD,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACV,EAAJ,KAAWJ,MAAM,CAACK,OAA9C,CAAd;MACAN,KAAK,CAACN,UAAN,GAAmBM,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAmB,CAACC,GAAD,EAAMP,IAAN,KAAeO,GAAG,GAAGP,IAAI,CAACQ,KAAL,GAAaR,IAAI,CAACG,KAA1D,EAAiE,CAAjE,CAAnB;IACD,CAxBO;;IAyBRS,UAAU,CAAChB,KAAD,EAAQ;MAChBA,KAAK,CAACL,KAAN,GAAc,EAAd;MACAK,KAAK,CAACN,UAAN,GAAmB,CAAnB;IACD;;EA5BO;AAHkB,CAAD,CAA7B;AAmCA,OAAO,MAAMuB,kBAAkB,GAAIZ,EAAD,IAAiBL,KAAD,IAChDA,KAAK,CAACkB,IAAN,CAAWvB,KAAX,CAAiBQ,IAAjB,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA5C,CADK;AAEP,OAAO,MAAMc,UAAU,GAAInB,KAAD,IAAsBA,KAAK,CAACkB,IAA/C;AAEP,OAAO,MAAM;EAAEnB,OAAF;EAAWc,UAAX;EAAuBG,UAAvB;EAAmCP;AAAnC,IAAiDb,SAAS,CAACwB,OAAjE;AACP,eAAexB,SAAS,CAACyB,OAAzB"},"metadata":{},"sourceType":"module"}