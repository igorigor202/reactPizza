{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchPizzas, Status } from './types';\nconst initialState = {\n  items: [],\n  status: Status.LOADING // loading | success | error\n\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SECCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","fetchPizzas","Status","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SECCESS","rejected","ERROR","actions","reducer"],"sources":["C:/Users/Igor N/Desktop/react pizza 24 L/src/redux/slices/pizza/slice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchPizzas, PizzaSliceState, Status } from './types';\r\n\r\nconst initialState: PizzaSliceState = {\r\n  items: [],\r\n  status: Status.LOADING, // loading | success | error\r\n};\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: 'pizza',\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPizzas.pending, (state, action) => {\r\n      state.status = Status.LOADING;\r\n      state.items = [];\r\n    });\r\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SECCESS;\r\n    });\r\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n      state.status = Status.ERROR;\r\n      state.items = [];\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\nexport default pizzaSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAuCC,MAAvC,QAAqD,SAArD;AAEA,MAAMC,YAA6B,GAAG;EACpCC,KAAK,EAAE,EAD6B;EAEpCC,MAAM,EAAEH,MAAM,CAACI,OAFqB,CAEZ;;AAFY,CAAtC;AAKA,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OADuB;EAE7BL,YAF6B;EAG7BM,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;IACD;;EAHO,CAHmB;EAQ7BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACgB,OAA5B,EAAqC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACtDD,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACI,OAAtB;MACAK,KAAK,CAACP,KAAN,GAAc,EAAd;IACD,CAHD;IAIAW,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACiB,SAA5B,EAAuC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACxDD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;MACAF,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACiB,OAAtB;IACD,CAHD;IAIAJ,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACmB,QAA5B,EAAsC,CAACT,KAAD,EAAQC,MAAR,KAAmB;MACvDD,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACmB,KAAtB;MACAV,KAAK,CAACP,KAAN,GAAc,EAAd;IACD,CAHD;EAID;AArB4B,CAAD,CAA9B;AAwBA,OAAO,MAAM;EAAEM;AAAF,IAAeH,UAAU,CAACe,OAAhC;AACP,eAAef,UAAU,CAACgB,OAA1B"},"metadata":{},"sourceType":"module"}